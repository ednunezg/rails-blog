<h1>Add Post</h1>

<%# 
    RUBY SYNTAX FOR CREATING A "POST" FORM 
    
    * NOTICE HOW the "posts" in "posts_path" url refers to posts controller.
    
    * The default method is HTML REST POST, and because we specified "posts" as path, we will 
      be submitting the form to posts->create controller

    * NOTICE HOW form text_field ids :title and :body corresponds to the Posts model fields

        ```
        rails g model Post title:string body:text
        ```

%>

<%# We can style this forming by referring to "new_post_form" within applications.scss %>
<%= form_for :post, url: posts_path, method: :post, :html => { :class => "new_post_form" } do |f| %>

    <% if @post.errors.any? %>
        <% @post.errors.full_messages.each do |msg| %>
            <div class="alert alert-danger"> <%= msg %> </div>
        <% end %>    
    <% end %>

    <p>
        <%= f.label(:title)%> <br/> <%# SEE HOW WE MAKE THE LABEL AND TEXT FIELD WITH :TITLE SYMBOL (SAME SYMBOL USED IN POST SQL COLUMN) %>
        <%= f.text_field(:title, {:class => 'form_control'}) %> <br/> <%# NOTICE HOW WE ADDED 'form_control' CSS CLASS TO THis %>
    </p>

    <p>
        <%= f.label(:body) %> <br/>
        <%= f.text_area(:body, {:class => 'form_control'}) %> <br/>
    </p>

    <p>
        <%= f.submit({:class => 'btn btn-primary'}) %> <%# NOTICE HOW WE ADDED custom CSS CLASS TO THiS SUBMIT BUTTON %>
    </p>

<% end %>